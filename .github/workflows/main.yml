name: Build, Push, and Deploy Docker image to ACR

on:
  push:
    branches: [ main, dev ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ env.TAG }}
    steps:
      - uses: actions/checkout@v3

      # Set variables for tag, env file, container app, and env name
      - name: Set Deployment Variables
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "TAG=latest" >> $GITHUB_ENV
            echo "ENV_FILE=.env" >> $GITHUB_ENV
            echo "CONTAINER_APP_NAME=yonchee-bot-prod" >> $GITHUB_ENV
            echo "ENVIRONMENT_NAME=production" >> $GITHUB_ENV
          else
            echo "TAG=dev" >> $GITHUB_ENV
            echo "ENV_FILE=.env.dev" >> $GITHUB_ENV
            echo "CONTAINER_APP_NAME=yonchee-bot-dev" >> $GITHUB_ENV
            echo "ENVIRONMENT_NAME=dev" >> $GITHUB_ENV
          fi

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Use tag/env file variable set above
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/yonchee-bot:${{ env.TAG }}
          build-args: |
            ENV_FILE=${{ env.ENV_FILE }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment:
      name: ${{ env.ENVIRONMENT_NAME }}
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Debug - List container apps in resource group
        run: |
          echo "Listing container apps in resource group: ${{ secrets.AZURE_RESOURCE_GROUP }}"
          az containerapp list --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --output table

      - name: Deploy to Azure Container App
        run: |
          az containerapp update \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --image ${{ secrets.ACR_LOGIN_SERVER }}/yonchee-bot:${{ needs.build-and-push.outputs.tag }}